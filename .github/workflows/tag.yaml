name: Create Tag on Merge to Main
on:
  push:
    branches:
      - main
jobs:
  create_and_push_tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git user
        run: |
          git config user.name "Konrad Krawczyk"
          git config user.email "konrad.krawczyk@icloud.com"
      - name: Get latest tag and increment (without 'v' prefix)
        id: tag_version
        run: |
          raw_latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null)
          echo "Surowy ostatni tag znaleziony przez 'git describe': '$raw_latest_tag'"

          if [[ -z "$raw_latest_tag" ]]; then
            version_core="0.0.0"
            echo "Nie znaleziono istniejących tagów. Używam wersji startowej: $version_core"
          else
            version_core=${raw_latest_tag#v}
            echo "Rdzeń wersji po usunięciu 'v' (jeśli istniało): $version_core"
          fi

          IFS='.' read -ra parts <<< "$version_core"
          major=${parts[0]:-0} # Domyślnie 0, jeśli część nie istnieje
          minor=${parts[1]:-0} # Domyślnie 0, jeśli część nie istnieje
          patch=${parts[2]:-0} # Domyślnie 0, jeśli część nie istnieje

          new_patch=$((patch + 1))

          new_tag="${major}.${minor}.${new_patch}"

          echo "Nowy tag do utworzenia: $new_tag"
          echo "new_tag_value=$new_tag" >> "$GITHUB_OUTPUT"
      - name: Create and push new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_TAG: ${{ steps.tag_version.outputs.new_tag_value }}
        run: |
          echo "Tworzenie taga $NEW_TAG"
          git tag -a "$NEW_TAG" -m "Automatycznie wygenerowany tag $NEW_TAG przez GitHub Actions"
          git push origin "$NEW_TAG"
          echo "Tag $NEW_TAG został pomyślnie utworzony i wypchnięty."
